defaults:

  npm-install: &npm-install
    run:
      name: "Install npm deps"
      command: |
        npm install --no-package-lock

  lint: &lint
    run:
      name: "Lint source code"
      command: |
        npm run lint

  build-wabt: &build-wabt
    run:
      name: "Build wabt"
      command: |
        git submodule update --init --recursive
        cd tools/wabt
        cmake -DBUILD_TESTS=OFF
        make -j8

  validate-build: &validate-build
    run:
      name: "Validate build artifacts were correctly included"
      command: |
        npm run build:validate

  build-cpp: &build-cpp
    run:
      name: "Build C++ evm2wasm"
      command: |
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j4
  
  state-tests: &state-tests
    run:
      name: "state tests n shit"
      command: |
        cd check
        go build
        ./check

  vm-tests: &vm-tests
    run:
      name: "Run ethereum VM tests"
      command: |
        npm run vmTests

  clone-cpp-eth: &clone-cpp-eth
    run:
      name: "Clone cpp-ethereum and hera"
      working_directory: ~/
      # to fetch Hera branch that does evm2wasm.js --trace:
      # cd hera
      # git fetch origin evm2wasm-trace
      # git checkout evm2wasm-trace
      command: |
        git clone https://github.com/ethereum/cpp-ethereum --branch ewasm-json-trace --single-branch
        cd cpp-ethereum
        git reset --hard b85a810d5b003d3d5046c0664d3d49e9bfe58939
        git submodule update --init
        cd hera
        git reset --hard b21a78df638c7ec3798494f5019be6be5672f324

  build-cpp-eth: &build-cpp-eth
    run:
      name: "Build cpp-ethereum and hera"
      working_directory: ~/
      command: |
        mkdir -p build
        cd build
        cmake ../cpp-ethereum -DCMAKE_BUILD_TYPE=RelWithDebInfo -DHERA=ON -DHERA_DEBUGGING=ON -DHERA_EVM2WASM=ON
        make -j4

  print-cpp-hera-version: &print-cpp-hera-version
    run:
      name: "Using cpp-ethereum and Hera versions:"
      working_directory: ~/
      command: |
        cd cpp-ethereum
        echo "cpp-ethereum branch: $(git rev-parse --abbrev-ref HEAD)  commit: $(git rev-parse HEAD)"
        cd hera
        echo "hera branch: $(git rev-parse --abbrev-ref HEAD)  commit: $(git rev-parse HEAD)"

  sstate-tests: &sstate-tests
    run:
      name: "Run Ethereum state tests"
      working_directory: ~/build
      # test/testeth -t GeneralStateTests/stExample -- --testpath ~/cpp-ethereum/test/jsontests --singlenet "Byzantium" --singletest "add11" --vm hera --evmc evm2wasm.js=true --evmc evm2wasm.js-trace=true --evmc fallback=false
      command: |
        echo 'export PATH=~/evm2wasm/bin:$PATH' >> $BASH_ENV
        source $BASH_ENV
        echo "running testeth command..."
        test/testeth -t GeneralStateTests/stExample -- --testpath ~/cpp-ethereum/test/jsontests --singlenet "Byzantium" --singletest "add11" --vm hera --evmc evm2wasm.js=true --evmc evm2wasm.js-trace=true --evmc fallback=false
        echo "ran the state tests."

  cli-tests: &cli-tests
    run:
      name: "Basic CLI validation"
      working_directory: ~/evm2wasm
      command: |
        bin/evm2wasm.js 600160020200 --trace
        build/tools/evm2wasm/evm2wasm <(echo "600160020200")

  state-test-steps: &state-test-steps
    - checkout
    - *state-tests
    #- *build-wabt
    #- *npm-install
    #- *lint
    #- *validate-build
      #- *build-cpp
      #- *cli-tests # weird chars mess up the console
      #- *vm-tests # vm-tests temporarily disabled until ewasm-kernel is fixed
    #- *clone-cpp-eth
    #- *build-cpp-eth
    #- *print-cpp-hera-version
    #- *state-tests

version: 2
jobs:
  # to run this using local circleci tool, rename Ewasm-Tests to `build` then do `circleci build -c circle.yml`
  build:
    working_directory: ~/evm2wasm
    docker:
      - image: jwasinger/cpp-node-go-env
    steps: *state-test-steps

workflows:
  version: 2
  evm2wasm-build:
    jobs:
       - build
